{
	"info": {
		"_postman_id": "9d7bd124-df44-4323-ab4a-9cb05ec97df4",
		"name": "Calendar Event Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34596932"
	},
	"item": [
		{
			"name": "Listing of User Events",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events?user_id=1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Listing of user events specific datetime range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events?start=2024-07-28 00:00:00&end=2024-08-04 17:12:15&user_id=1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events"
					],
					"query": [
						{
							"key": "start",
							"value": "2024-07-28 00:00:00"
						},
						{
							"key": "end",
							"value": "2024-08-04 17:12:15"
						},
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create user event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1,\n    \"title\": \"Sample Event\",\n    \"description\": \"This is a sample event\",\n    \"start\": \"2024-07-30T21:55:03+00:00\",\n    \"end\": \"2024-07-31T22:55:03+00:00\",\n    \"recurring_pattern\": false,\n    \"frequency\": null,\n    \"repeat_until\": null\n}"
				},
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "validation errors on create event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": null,\n    \"title\": \"\",\n    \"description\": \"\",\n    \"start\": \"\",\n    \"end\": \"\",\n    \"recurring_pattern\": false,\n    \"frequency\": null,\n    \"repeat_until\": null\n}"
				},
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user event recurresive",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user_id\": 1,\n    \"title\":\"Sample Event\",\n    \"description\":\"This is a sample event\",\n    \"start\":\"2024-08-01T21:55:03+00:00\",\n    \"end\":\"2024-08-01T22:55:03+00:00\",\n    \"recurring_pattern\":true,\n    \"frequency\":\"daily\",\n    \"repeat_until\":\"2024-08-07T22:55:03+00:00\"\n}"
				},
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user event",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"Sample Event\",\n    \"description\":\"This is a sample event\",\n    \"start\":\"2024-07-30T21:55:03+00:00\",\n    \"end\":\"2024-07-31T22:55:03+00:00\",\n    \"recurring_pattern\":false,\n    \"frequency\": null,\n    \"repeat_until\":null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events/11/users/1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events",
						"11",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "validation errors on updating events",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"\",\n    \"description\":\"\",\n    \"start\":\"\",\n    \"end\":\"\",\n    \"recurring_pattern\":null,\n    \"frequency\": null,\n    \"repeat_until\":null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events/11/users/1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events",
						"11",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user event recursive",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"Sample Event\",\n    \"description\":\"This is a sample event\",\n    \"start\":\"2024-07-30T21:55:03+00:00\",\n    \"end\":\"2024-07-31T22:55:03+00:00\",\n    \"recurring_pattern\":true,\n    \"frequency\": \"monthly\",\n    \"repeat_until\":\"2024-08-05T22:55:03+00:00\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events/11/users/1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events",
						"11",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user event",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events/16/users/1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events",
						"16",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete sub-sequent user event",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events/14/users/1?deleteSubsequent=true",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events",
						"14",
						"users",
						"1"
					],
					"query": [
						{
							"key": "deleteSubsequent",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "End date Error on listing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Error message should be returned for missing end date\", function () {",
							"    pm.response.to.have.status(422); // Assuming 422 Unprocessable Entity for validation errors",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"The end date is required when the start date is present.\");",
							"    pm.expect(jsonData.errors).to.have.property('end').that.is.an('array').that.includes(\"The end date is required when the start date is present.\");",
							"});",
							"",
							"pm.test(\"Status code should not be 200 for missing end date\", function () {",
							"    pm.response.to.not.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code should be 422 for missing end date\", function () {",
							"    pm.response.to.have.status(422);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events?start=2024-07-28 00:00:00&user_id=1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events"
					],
					"query": [
						{
							"key": "start",
							"value": "2024-07-28 00:00:00"
						},
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Start date Error on listing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Error message should be returned for missing start date\", function () {",
							"    pm.response.to.have.status(422); // Assuming 422 Unprocessable Entity for validation errors",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"The start date is required when the end date is present.\");",
							"    pm.expect(jsonData.errors).to.have.property('start').that.is.an('array').that.includes(\"The start date is required when the end date is present.\");",
							"});",
							"",
							"",
							"pm.test(\"Status code should not be 200 for missing end date\", function () {",
							"    pm.response.to.not.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code should be 422 for missing start date\", function () {",
							"    pm.response.to.have.status(422);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.calendar-event-management.test/api/events?end=2024-08-04 17:12:15&user_id=1",
					"protocol": "https",
					"host": [
						"api",
						"calendar-event-management",
						"test"
					],
					"path": [
						"api",
						"events"
					],
					"query": [
						{
							"key": "end",
							"value": "2024-08-04 17:12:15"
						},
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}