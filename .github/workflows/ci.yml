name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  docker-build-and-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10-dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      
      - name: Install mkcert
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-tools
          curl -L -o mkcert https://dl.filippo.io/mkcert/latest/mkcert-linux-amd64
          chmod +x mkcert
          sudo mv mkcert /usr/local/bin/mkcert

      - name: Generate local CA and SSL certificates
        run: |
          mkcert -install
          mkcert -cert-file docker/nginx/ssl.pem -key-file docker/nginx/key.pem api.calendar-event-management.test

      - name: Build Docker images
        run: docker-compose build --no-cache

      - name: Start Docker containers
        run: docker-compose up -d

      - name: Wait for MySQL to be ready
        run: |
          until docker-compose exec -T mysql mysqladmin ping --silent; do
            echo "Waiting for MySQL..."
            sleep 1
          done

      - name: Copy .env
        run: cp .env.example .env

      - name: Install Composer dependencies
        run: docker-compose run --rm php-fpm-debug composer install --prefer-dist --no-interaction --no-scripts --no-progress

      - name: Generate application key
        run: docker-compose run --rm php-fpm-debug php artisan key:generate

      - name: Run migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: calendar
          DB_USERNAME: root
          DB_PASSWORD: password
        run: docker-compose run --rm php-fpm-debug php artisan migrate --force

      - name: Run tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: calendar
          DB_USERNAME: root
          DB_PASSWORD: password
        run: docker-compose run --rm php-fpm-debug vendor/bin/pest --stop-on-error --stop-on-failure --parallel --compact

      - name: Stop and remove Docker containers
        run: docker-compose down
