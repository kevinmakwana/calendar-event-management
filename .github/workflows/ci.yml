name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  calendar-event-management-tests:
    runs-on: ubuntu-latest

    env:
      DOCKER_SERVER_NAME: api.calendar-event-management.test
      DOCKER_MYSQL_LOCAL_PORT: 3306
      DOCKER_NGINX_LOCAL_PORT: 443

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Install mkcert
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-tools
          curl -L -o mkcert https://dl.filippo.io/mkcert/latest?for=linux/amd64
          chmod +x mkcert
          sudo mv mkcert /usr/local/bin/mkcert
          mkcert --version # Verify installation

      - name: Generate local CA and SSL certificates
        run: |
          mkcert -install
          mkcert -cert-file docker/nginx/ssl.pem -key-file docker/nginx/key.pem api.calendar-event-management.test

      - name: Build docker services
        run: |
          docker-compose -f docker-compose.yml build --no-cache

      - name: Start docker services
        run: |
          docker-compose docker-compose.yml up -d
      
      - name: Install Composer dependencies
        run: |
          docker-compose exec -T php-fpm-debug /bin/sh -c "composer install"

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if docker-compose exec -T mysql mysqladmin ping --silent; then
              echo "MySQL is ready!"
              break
            else
              echo "MySQL is not ready yet, retrying..."
              sleep 2
            fi
          done
        continue-on-error: true

      - name: Run migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql-test
          DB_PORT: 3307
          DB_DATABASE: calendar
          DB_USERNAME: root
          DB_PASSWORD: password
        run: docker-compose run --rm php-fpm-debug php artisan migrate:fresh --seed --force

      - name: Run tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql-test
          DB_PORT: 3307
          DB_DATABASE: calendar
          DB_USERNAME: root
          DB_PASSWORD: password
        run: |
          docker-compose exec -T php-fpm-debug /bin/sh -c "composer test"

      - name: Stop and remove services
        if: always()
        run: docker-compose -f docker-compose.yml down
